name: Build .deb Packages
on:
  push:
    branches: [main]
    tags:
      # matches v1.2.3 and v1.2.3<any pre-release label> e.g. v1.2.3~alpha-1
      - 'v[0-9]+\.[0-9]+\.[0-9]+*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [amd64, arm64]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential debhelper cmake dpkg-dev

          if [ "${{ matrix.arch }}" = "amd64" ]; then
            sudo apt-get install -y crossbuild-essential-amd64
          elif [ "${{ matrix.arch }}" = "arm64" ]; then
            sudo apt-get install -y crossbuild-essential-arm64
          fi

      - name: Build .deb package
        run: |
          if [ "${{ matrix.arch }}" = "amd64" ]; then
            CC=x86_64-linux-gnu-gcc DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -us -uc -a amd64 --no-check-builddeps
          else
            CC=aarch64-linux-gnu-gcc DEB_BUILD_OPTIONS=nocheck dpkg-buildpackage -us -uc -a arm64 --no-check-builddeps
          fi
          mv ../*.deb . || true
          mv ../*.ddeb . || true

      - name: Upload .deb artifacts
        uses: actions/upload-artifact@v4
        with:
          name: debs-${{ matrix.arch }}
          path: "*.deb"

  release:
    if: startsWith(github.ref, 'refs/tags/v')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./debs

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./debs/**/*.deb
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
